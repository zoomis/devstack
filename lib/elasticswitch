# lib/template
# Functions to control the configuration and operation of the elasticswitch service
# <do not include this template file in ``stack.sh``!>

# Dependencies:
#
# - ``functions`` file
# - ``SERVICE_{TENANT_NAME|PASSWORD}`` must be defined
# - <list other global vars that are assumed to be defined>

# ``stack.sh`` calls the entry points in this order:
#
# - is_elasticswitch_enabled
# - install_elasticswitch
# - configure_elasticswitch
# - init_elasticswitch
# - start_elasticswitch
# - stop_elasticswitch
# - cleanup_elasticswitch

# Save trace setting
XTRACE=$(set +o | grep xtrace)
set +o xtrace


# Defaults
# --------

# <define global variables here that belong to this project>

# Set up default directories
ES_DIR=$DEST/elasticswitch_cnc
ES_TESTBED_DIR=$DEST/elasticswitch_cnc/testbed
ES_CONF_DIR=/etc/elasticswitch
ES_SCRIPT_DIR=$DEST/elasticswitch_cnc/testbed/scripts_opencirrus
ES_CONFIG_DIR=$DEST/elasticswitch_cnc/esconfig


# Entry Points
# ------------

# Test if any elasticswitch services are enabled
# is_elasticswitch_enabled
function is_elasticswitch_enabled {
    [[ ,${ENABLED_SERVICES} =~ ,"elasticswitch" ]] && return 0
    return 1
}

# cleanup_elasticswitch() - Remove residual data files, anything left over from previous
# runs that a clean run would need to clean up
function cleanup_elasticswitch {
    # kill instances (nova)
    # delete image files (glance)
    # This function intentionally left blank
    :
}

# configure_elasticswitch() - Set config files, create data dirs, etc
function configure_elasticswitch {
    # sudo python setup.py deploy
    # iniset $elasticswitch_CONF ...
    # This function intentionally left blank
    :
}

# init_elasticswitch() - Initialize databases, etc.
function init_elasticswitch {
    # clean up from previous (possibly aborted) runs
    # create required data files
    :
}

# install_elasticswitch() - Collect source and prepare
function install_elasticswitch {
    # git clone xxx
    $ES_SCRIPT_DIR/install_cnc_openstack.py

    # build esconfig
    cd $ES_CONFIG_DIR
    make
    # install esconfig to /usr/bin
    sudo install -m 0755 esconfig /usr/bin
}

# start_elasticswitch() - Start running processes, including screen
function start_elasticswitch {
    # The quoted command must be a single command and not include an
    # shell metacharacters, redirections or shell builtins.
    # run_process elasticswitch "$elasticswitch_DIR/bin/elasticswitch-bin"
    run_process elasticswitch "cd $ES_TESTBED_DIR && $ES_DIR/testbed/run"
}

# stop_elasticswitch() - Stop running processes (non-screen)
function stop_elasticswitch {
    # for serv in serv-a serv-b; do
    #     stop_process $serv
    # done
    stop_process elasticswitch
}

# Restore xtrace
$XTRACE

# Tell emacs to use shell-script-mode
## Local variables:
## mode: shell-script
## End:
